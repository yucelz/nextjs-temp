name: Build || Push || Deploy Cloud 

on:
  push:
    branches:
      - main
env:
  PROJECT_ID: heptastack
  REGION: us-central1
  SERVICE: next-temp
  REPOSITORY: heptastack-repo
  #GAR_LOCATION: us-central1-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{env.SERVICE}}/

jobs:
  build-and-push:
    name: Build && Push && Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Docker image tag
        id: set_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud auth list --filter=status:ACTIVE --format="value(account)"'

      
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGION}}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: 'Build and Push Container'
        run: |-        
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-central1-docker.pkg.dev
          docker push "${DOCKER_TAG}"

      - name: 'Deploy to Cloud Run'

        # END - Docker auth and build

        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17' # google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          # NOTE: If using a pre-built image, update the image name below:

          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}:${{ github.sha }}'
      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |2-

          echo ${{ steps.deploy.outputs.url }}