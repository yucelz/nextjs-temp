name: Build || Push || Deploy Cloud 

on:
  push:
    # branches:
    #   - main
    tags:
      - v*
env:
  PROJECT_ID: heptastack
  REGION: us-central1
  SERVICE: next-temp
  REPOSITORY: heptastack-repo
  GAR_HOST: us-central1-docker.pkg.dev

jobs:
  build-and-push:
    name: Build && Push && Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Docker image tag
        id: set_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud auth list --filter=status:ACTIVE --format="value(account)"'

      
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGION}}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          #export_default_credentials: true

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ env.GAR_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest .

      # Push the Docker image to Google Artifact Registry
      - name: Push Docker image to Google Artifact Registry
        run: |
          docker push ${{ env.GAR_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest

      - name: 'Deploy to Cloud Run'

        # END - Docker auth and build

        uses: 'google-github-actions/deploy-cloudrun@33553064113a37d688aa6937bacbdc481580be17' # google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          # NOTE: If using a pre-built image, update the image name below:

          image: '${{ env.GAR_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest'
      # If required, use the Cloud Run URL output in later steps
      - name: 'gcloud CLI Allowing unauthenticated'
        run: 'gcloud run services add-iam-policy-binding ${{ env.SERVICE }} --member="allUsers" --role="roles/run.invoker" --region=${{env.REGION}}'      
      
      - name: 'Show output'
        run: |2-

          echo ${{ steps.deploy.outputs.url }}